{"EDITOR_STATE":{"allProjectFiles":{"13c9fd27-eb66-4955-9777-80a3d4a128b6":{"id":"13c9fd27-eb66-4955-9777-80a3d4a128b6","parent":null,"name":"Hiru_S32","type":"DIRECTORY","isDirectory":true,"children":["9a224403-3204-422a-9c8a-4bb16a2eef88"],"isRemovable":false,"filePath":"Hiru_S32"},"9a224403-3204-422a-9c8a-4bb16a2eef88":{"id":"9a224403-3204-422a-9c8a-4bb16a2eef88","parent":"13c9fd27-eb66-4955-9777-80a3d4a128b6","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_S32/lambda.js","code":"let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nexports.handler = function (event, context, callback) {\n\ts3.getBucketLocation({\n\t\t'Bucket': \"hiru.east\"\n\t}).promise()\n\t\t.then(data => {\n\t\t\tconsole.log(data);           // successful response\n\t\t\t/*\n\t\t\tdata = {\n\t\t\t\tLocationConstraint: \"us-west-2\"\n\t\t\t}\n\t\t\t*/\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t});\n\n\n\tcallback(null, 'Successfully executed');\n}","triggers":[],"version":1}},"rootNode":"13c9fd27-eb66-4955-9777-80a3d4a128b6","openFiles":["9a224403-3204-422a-9c8a-4bb16a2eef88"],"currentFileId":"9a224403-3204-422a-9c8a-4bb16a2eef88","resources":{"s3hirueast":{"name":"s3hirueast","type":"S3","config":{"mode":0,"bucket":{"region":"ca-central-1","name":"hiru.east"}},"globallyEditable":false}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"}}},"lambdaId":"9a224403-3204-422a-9c8a-4bb16a2eef88","additionalFiles":[]},"PROJECT_META":{"projectName":"Hiru_S32","projectDescription":"","projectVersion":"1.0.0","projectRegion":"ca-central-1","repoName":"Hiru_S32","repoUrl":"https://github.com/hirudinee/Hiru_S32","lastSave":1518607199252}}